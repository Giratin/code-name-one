package tn.esprit;

import com.codename1.components.ImageViewer;
import com.codename1.io.ConnectionRequest;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import com.codename1.ui.Button;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.Image;
import com.codename1.ui.TextField;
import com.codename1.ui.URLImage;
import com.codename1.ui.events.ActionListener;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class Main {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }
        Form hi = new Form("Hi World", BoxLayout.y());

//        EncodedImage enc = EncodedImage.createFromImage(theme.getImage("loading.jpg"), true);
//        String url = "http://cn1.rdi-esprit.com/bassem.jpg";
//        
//        Image img = URLImage.createToStorage(enc, url , url);
//        ImageViewer image = new ImageViewer(img);
//        hi.add(image);
       

        TextField emailTf = new TextField("", "Email");
        TextField pwdTf = new TextField("", "Password", 0, TextField.PASSWORD);

        Button btnLogin = new Button("Login");

        Label lb = new Label("Le résultat est :");
        
        btnLogin.addActionListener((evt) -> {

            String email = emailTf.getText();
            String password = pwdTf.getText();

            String url = "http://ptm.rdi-esprit.com/login?email=" + email + "&password=" + password;
            
            ConnectionRequest cnr = new ConnectionRequest(url, false);

            cnr.addResponseListener(new ActionListener<NetworkEvent>() {
                @Override
                public void actionPerformed(NetworkEvent evt) {
                    String result = new String(cnr.getResponseData());
                    if (result.equalsIgnoreCase("ok")) {
                        
                        Dialog.show("Résultat", "Authentification réussite", "OK", null);
                        
                    } else {
                        Dialog.show("Résultat", "Erreur d'authentification", "OK", null);
                        //lb.setText("Le résultat est : Erreur d'authentification");
                    }

                }
            });

            NetworkManager.getInstance().addToQueue(cnr);
        });

        hi.addAll(emailTf, pwdTf, btnLogin);
        hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
